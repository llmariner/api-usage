# Default values for api-usage-cleaner.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# +docs:section=Global

# Global settings are used to share the values among LLMariner components.
# api-usage-cleaner is a dependency of LLMariner, so global values are
# propagated at its installation.
# Please see https://github.com/llmariner/llmariner/blob/main/deployments/llmariner.
global:
  # Specify SQL database info for the cleaner access.
  # Currently, only PostgreSQL is supported.
  database:
    # The database host name.
    host: postgres
    # The database port number.
    # +docs:type=number
    port: 5432
    # The database user name.
    username: ps_user

    ssl:
      # This option determines whether or with what priority a secure
      # SSL TCP/IP connection will be negotiated with the database.
      # For more information, see [Database Connection Control](https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNECT-SSLMODE)
      mode: prefer
      # Specify the name of a file containing SSL certificate authority (CA)
      # certificate(s). If the file exists, the server's certificate will
      # be verified to be signed by one of these authorities.
      # For more information, see [Database Connection Control](https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNECT-SSLROOTCERT)
      # +docs:property
      # rootCert: ""

    # Specify whether to create the database if it does not exist.
    createDatabase: false
    # Specify the original database name to connect to before creating
    # the database. If empty, use "template1".
    # +docs:property
    # originalDatabase: ""

  # Specify the Secret that contains a database password. The Deployment
  # reads this secret and sets it as a environment value.
  databaseSecret:
    # The secret name.
    name: postgres
    # The key name with a password set.
    key: password

# Database configuration for the api-usage-cleaner.
database:
  # The database name.
  database: api_usage

# Override the "api-usage-cleaner.fullname" value. This value is used as part of
# most of the names of the resources created by this Helm chart.
# +docs:property
# fullnameOverride: "my-api-usage-cleaner"

# Override the "api-usage-cleaner.name" value, which is used to annotate some of
# the resources that are created by this Chart (using "app.kubernetes.io/name").
# +docs:property
# nameOverride: "my-api-usage-cleaner"

# +docs:section=Deployment
# Number of replicas to run.
# +docs:type=number
replicaCount: 1

# The interval in time duration to clean up the database.
# +docs:type=string
pollInterval: 1h
# The retention period in time duration for the database.
# +docs:type=string
retentionPeriod: 720h

# Image configuration.
image:
  # The container image to use.
  repository: public.ecr.aws/cloudnatix/llmariner/api-usage-server
  # Kubernetes imagePullPolicy on Deployment.
  pullPolicy: IfNotPresent

# Override the container image tag to deploy by setting this variable.
# If no value is set, the chart's appVersion will be used.
# +docs:property
# version: vX.Y.Z

# Optional additional annotations to add to the Deployment Pods.
# +docs:property
# podAnnotations: {}

# The nodeSelector on Pods tells Kubernetes to schedule Pods on the
# nodes with matching labels.
# For more information, see [Assigning Pods to Nodes](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).
# +docs:property
# nodeSelector: {}

# A Kubernetes Affinity, if required.
# For more information, see [Assigning Pods to Nodes](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node).
# +docs:property
# affinity: {}

# A list of Kubernetes Tolerations, if required.
# For more information, see [Taints and Tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/).
# +docs:property
# tolerations: []

# Resources to provide to the api-usage-cleaner pod.
# For more information, see [Resource Management for Pods and Containers](https://kubernetes.io/docs/concepts/configuration/manage-resources-Containers/).
# +docs:property
resources:
  requests:
    cpu: "100m"
    memory: "128Mi"
  limits:
    cpu: "100m"
    memory: "128Mi"

# Security Context for the api-usage-cleaner pod.
# For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
# +docs:property
podSecurityContext:
  fsGroup: 2000

# Security Context for the api-usage-cleaner container.
# For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
# +docs:property
securityContext:
  readOnlyRootFilesystem: true
  capabilities:
    drop:
    - ALL
  runAsNonRoot: true
  runAsUser: 1000

# Additional volumes to add to the api-usage-cleaner pod.
# +docs:property
# volumes: []

# Additional volume mounts to add to the api-usage-cleaner container.
# +docs:property
# volumeMounts: []

# This field can be used as a condition when using it as a dependency.
# This definition is only here as a placeholder such that it is
# included in the json schema.
# +docs:hidden
# +docs:property
# enable: true
